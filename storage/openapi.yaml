openapi: 3.0.0
info:
  title: Forest Fire Storage API
  version: "1.0.0"
  description: Persists single readings to SQLite via SQLAlchemy.

paths:
  /temperature:
    # post:
    #   summary: Store one temperature reading
    #   operationId: app.create_temperature_reading
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/TemperatureReading'
    #   responses:
    #     '201':
    #       description: Stored
    #     '400':
    #       description: Invalid input
    get:
      summary: Gets temperature readings within a time range
      operationId: app.get_temperature_readings
      description: Gets temperature readings received between start and end timestamps
      parameters:
        - name: start_timestamp
          in: query
          description: Start of the timespan
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
        - name: end_timestamp
          in: query
          description: End of the timespan
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
      responses:
        '200':
          description: Returns the list of temperature readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemperatureReading'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /airquality:
    # post:
    #   summary: Store one air quality reading
    #   operationId: app.create_airquality_reading
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/AirQualityReading'
    #   responses:
    #     '201':
    #       description: Stored
    #     '400':
    #       description: Invalid input
    get:
      summary: Gets air quality readings within a time range
      operationId: app.get_airquality_readings
      description: Gets air quality readings received between start and end timestamps
      parameters:
        - name: start_timestamp
          in: query
          description: Start of the timespan
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
        - name: end_timestamp
          in: query
          description: End of the timespan
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
      responses:
        '200':
          description: Returns the list of air quality readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirQualityReading'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    # Single object schema (flattened) per lab Part 1 example
    # (batch/common fields + reading-specific fields) :contentReference[oaicite:5]{index=5}
    TemperatureReading:
      type: object
      required:
      #Added the trace_id here to have it added into the database. Without this, error would rise up.
        - trace_id
        - fire_id
        - latitude
        - longitude
        - temperature_celsius
        - batch_timestamp
        - reading_timestamp
      properties:
        trace_id:
          type: integer
          format: int64
          example: 1759384173492180800
        fire_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        latitude:
          type: number
          example: 49.391065
        longitude:
          type: number
          example: -123.047647
        temperature_celsius:
          type: number
          example: 129.4
        humidity_level:
          type: number
          description: Relative humidity percentage for the reading.
          example: 60.4
        batch_timestamp:
          type: string
          format: date-time
          example: "2025-08-29T09:12:33.001Z"
        reading_timestamp:
          type: string
          format: date-time
          example: "2025-08-29T09:56:33.001Z"

    AirQualityReading:
      type: object
      required:
        - trace_id
        - fire_id
        - location_name
        - particulate_level
        - air_quality
        - smoke_opacity
        - batch_timestamp
        - reading_timestamp
      properties:
        trace_id:
          type: integer
          format: int64
          example: 1759384173492180800
        fire_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        location_name:
          type: string
          example: Vancouver
        particulate_level:
          type: number
          example: 34
        air_quality:
          type: number
          example: 160
        smoke_opacity:
          type: number
          example: 30
        batch_timestamp:
          type: string
          format: date-time
          example: "2025-08-29T09:12:33.001Z"
        reading_timestamp:
          type: string
          format: date-time
          example: "2025-08-29T09:56:33.001Z"
